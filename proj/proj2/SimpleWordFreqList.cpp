/*
 * This is a *very* simple WordFreqList implementation
 * that passes everything off to an underlying WordFreqLinkedList
 * object.  
 * 
 * I have not duplicated the function contracts here.
 *
 * STUDENTS DO NOT EDIT THIS FILE.
 *
 * Mark A. Sheldon, Tufts University, Spring 2021
 */
#include <iostream>
#include <string>

#include "SimpleWordFreqList.h"
#include "WordFreqLinkedList.h"

using namespace std;

WordFreqList::WordFreqList()
{
        // linked list constructor initializes itself
}

WordFreqList::~WordFreqList()
{
        // linked list destructor recycles its own storage
}

int WordFreqList::size()
{
        return wflist.size();
}

void WordFreqList::countOccurrence(string word)
{
        wflist.countOccurrence(word);
}

WordFreq WordFreqList::get(int index)
{
        return wflist.get(index);
}

void WordFreqList::debugPrint()
{
        cout << "SimpleWordFreqList contains: ";
        wflist.debugPrint();
}
